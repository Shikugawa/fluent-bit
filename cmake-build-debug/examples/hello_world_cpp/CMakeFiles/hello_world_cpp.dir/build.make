# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.17

# Delete rule output on recipe failure.
.DELETE_ON_ERROR:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/shikugawa/dev/fluent-bit

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/shikugawa/dev/fluent-bit/cmake-build-debug

# Include any dependencies generated for this target.
include examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/depend.make

# Include the progress variables for this target.
include examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/progress.make

# Include the compile flags for this target's objects.
include examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/flags.make

examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.o: examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/flags.make
examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.o: ../examples/hello_world_cpp/hello_world.cc
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shikugawa/dev/fluent-bit/cmake-build-debug/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.o"
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp && /opt/llvm/bin/clang++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/hello_world_cpp.dir/hello_world.cc.o -c /home/shikugawa/dev/fluent-bit/examples/hello_world_cpp/hello_world.cc

examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.i: cmake_force
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/hello_world_cpp.dir/hello_world.cc.i"
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp && /opt/llvm/bin/clang++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shikugawa/dev/fluent-bit/examples/hello_world_cpp/hello_world.cc > CMakeFiles/hello_world_cpp.dir/hello_world.cc.i

examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.s: cmake_force
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/hello_world_cpp.dir/hello_world.cc.s"
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp && /opt/llvm/bin/clang++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shikugawa/dev/fluent-bit/examples/hello_world_cpp/hello_world.cc -o CMakeFiles/hello_world_cpp.dir/hello_world.cc.s

# Object files for target hello_world_cpp
hello_world_cpp_OBJECTS = \
"CMakeFiles/hello_world_cpp.dir/hello_world.cc.o"

# External object files for target hello_world_cpp
hello_world_cpp_EXTERNAL_OBJECTS =

bin/hello_world_cpp: examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/hello_world.cc.o
bin/hello_world_cpp: examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/build.make
bin/hello_world_cpp: lib/libfluent-bit.so
bin/hello_world_cpp: library/libflb-http-server.a
bin/hello_world_cpp: library/libflb-plugin-custom_calyptia.a
bin/hello_world_cpp: library/libflb-plugin-in_cpu.a
bin/hello_world_cpp: library/libflb-plugin-in_mem.a
bin/hello_world_cpp: library/libflb-plugin-in_thermal.a
bin/hello_world_cpp: library/libflb-plugin-in_kmsg.a
bin/hello_world_cpp: library/libflb-plugin-in_proc.a
bin/hello_world_cpp: library/libflb-plugin-in_disk.a
bin/hello_world_cpp: library/libflb-plugin-in_netif.a
bin/hello_world_cpp: library/libflb-plugin-in_docker.a
bin/hello_world_cpp: library/libflb-plugin-in_docker_events.a
bin/hello_world_cpp: library/libflb-plugin-in_node_exporter_metrics.a
bin/hello_world_cpp: library/libflb-plugin-in_fluentbit_metrics.a
bin/hello_world_cpp: library/libflb-plugin-in_emitter.a
bin/hello_world_cpp: library/libflb-plugin-in_tail.a
bin/hello_world_cpp: library/libflb-plugin-in_dummy.a
bin/hello_world_cpp: library/libflb-plugin-in_head.a
bin/hello_world_cpp: library/libflb-plugin-in_health.a
bin/hello_world_cpp: library/libflb-plugin-in_http.a
bin/hello_world_cpp: library/libflb-plugin-in_collectd.a
bin/hello_world_cpp: library/libflb-plugin-in_statsd.a
bin/hello_world_cpp: library/libflb-plugin-in_storage_backlog.a
bin/hello_world_cpp: library/libflb-plugin-in_stream_processor.a
bin/hello_world_cpp: library/libflb-plugin-in_serial.a
bin/hello_world_cpp: library/libflb-plugin-in_stdin.a
bin/hello_world_cpp: library/libflb-plugin-in_syslog.a
bin/hello_world_cpp: library/libflb-plugin-in_exec.a
bin/hello_world_cpp: library/libflb-plugin-in_tcp.a
bin/hello_world_cpp: library/libflb-plugin-in_mqtt.a
bin/hello_world_cpp: library/libflb-plugin-in_lib.a
bin/hello_world_cpp: library/libflb-plugin-in_forward.a
bin/hello_world_cpp: library/libflb-plugin-in_random.a
bin/hello_world_cpp: library/libflb-plugin-out_azure.a
bin/hello_world_cpp: library/libflb-plugin-out_azure_blob.a
bin/hello_world_cpp: library/libflb-plugin-out_bigquery.a
bin/hello_world_cpp: library/libflb-plugin-out_calyptia.a
bin/hello_world_cpp: library/libflb-plugin-out_counter.a
bin/hello_world_cpp: library/libflb-plugin-out_datadog.a
bin/hello_world_cpp: library/libflb-plugin-out_es.a
bin/hello_world_cpp: library/libflb-plugin-out_exit.a
bin/hello_world_cpp: library/libflb-plugin-out_file.a
bin/hello_world_cpp: library/libflb-plugin-out_forward.a
bin/hello_world_cpp: library/libflb-plugin-out_http.a
bin/hello_world_cpp: library/libflb-plugin-out_influxdb.a
bin/hello_world_cpp: library/libflb-plugin-out_logdna.a
bin/hello_world_cpp: library/libflb-plugin-out_loki.a
bin/hello_world_cpp: library/libflb-plugin-out_kafka_rest.a
bin/hello_world_cpp: library/libflb-plugin-out_nats.a
bin/hello_world_cpp: library/libflb-plugin-out_nrlogs.a
bin/hello_world_cpp: library/libflb-plugin-out_null.a
bin/hello_world_cpp: library/libflb-plugin-out_plot.a
bin/hello_world_cpp: library/libflb-plugin-out_skywalking.a
bin/hello_world_cpp: library/libflb-plugin-out_slack.a
bin/hello_world_cpp: library/libflb-plugin-out_splunk.a
bin/hello_world_cpp: library/libflb-plugin-out_stackdriver.a
bin/hello_world_cpp: library/libflb-plugin-out_stdout.a
bin/hello_world_cpp: library/libflb-plugin-out_syslog.a
bin/hello_world_cpp: library/libflb-plugin-out_tcp.a
bin/hello_world_cpp: library/libflb-plugin-out_td.a
bin/hello_world_cpp: library/libflb-plugin-out_lib.a
bin/hello_world_cpp: library/libflb-plugin-out_flowcounter.a
bin/hello_world_cpp: library/libflb-plugin-out_gelf.a
bin/hello_world_cpp: library/libflb-plugin-out_websocket.a
bin/hello_world_cpp: library/libflb-plugin-out_cloudwatch_logs.a
bin/hello_world_cpp: library/libflb-plugin-out_kinesis_firehose.a
bin/hello_world_cpp: library/libflb-plugin-out_kinesis_streams.a
bin/hello_world_cpp: library/libflb-plugin-out_prometheus_exporter.a
bin/hello_world_cpp: library/libflb-plugin-out_prometheus_remote_write.a
bin/hello_world_cpp: library/libflb-plugin-out_s3.a
bin/hello_world_cpp: library/libflb-plugin-filter_alter_size.a
bin/hello_world_cpp: library/libflb-plugin-filter_aws.a
bin/hello_world_cpp: library/libflb-plugin-filter_checklist.a
bin/hello_world_cpp: library/libflb-plugin-filter_record_modifier.a
bin/hello_world_cpp: library/libflb-plugin-filter_throttle.a
bin/hello_world_cpp: library/libflb-plugin-filter_kubernetes.a
bin/hello_world_cpp: library/libflb-plugin-filter_modify.a
bin/hello_world_cpp: library/libflb-plugin-filter_multiline.a
bin/hello_world_cpp: library/libflb-plugin-filter_nest.a
bin/hello_world_cpp: library/libflb-plugin-filter_parser.a
bin/hello_world_cpp: library/libflb-plugin-filter_expect.a
bin/hello_world_cpp: library/libflb-plugin-filter_grep.a
bin/hello_world_cpp: library/libflb-plugin-filter_rewrite_tag.a
bin/hello_world_cpp: library/libflb-plugin-filter_lua.a
bin/hello_world_cpp: library/libflb-plugin-filter_stdout.a
bin/hello_world_cpp: library/libflb-plugin-filter_geoip2.a
bin/hello_world_cpp: library/libapi-v1.a
bin/hello_world_cpp: library/libfluent-bit.a
bin/hello_world_cpp: library/libflb-http-server.a
bin/hello_world_cpp: library/libflb-plugin-custom_calyptia.a
bin/hello_world_cpp: library/libflb-plugin-in_cpu.a
bin/hello_world_cpp: library/libflb-plugin-in_mem.a
bin/hello_world_cpp: library/libflb-plugin-in_thermal.a
bin/hello_world_cpp: library/libflb-plugin-in_kmsg.a
bin/hello_world_cpp: library/libflb-plugin-in_proc.a
bin/hello_world_cpp: library/libflb-plugin-in_disk.a
bin/hello_world_cpp: library/libflb-plugin-in_netif.a
bin/hello_world_cpp: library/libflb-plugin-in_docker.a
bin/hello_world_cpp: library/libflb-plugin-in_docker_events.a
bin/hello_world_cpp: library/libflb-plugin-in_node_exporter_metrics.a
bin/hello_world_cpp: library/libflb-plugin-in_fluentbit_metrics.a
bin/hello_world_cpp: library/libflb-plugin-in_emitter.a
bin/hello_world_cpp: library/libflb-plugin-in_tail.a
bin/hello_world_cpp: library/libflb-plugin-in_dummy.a
bin/hello_world_cpp: library/libflb-plugin-in_head.a
bin/hello_world_cpp: library/libflb-plugin-in_health.a
bin/hello_world_cpp: library/libflb-plugin-in_http.a
bin/hello_world_cpp: library/libflb-plugin-in_collectd.a
bin/hello_world_cpp: library/libflb-plugin-in_statsd.a
bin/hello_world_cpp: library/libflb-plugin-in_storage_backlog.a
bin/hello_world_cpp: library/libflb-plugin-in_stream_processor.a
bin/hello_world_cpp: library/libflb-plugin-in_serial.a
bin/hello_world_cpp: library/libflb-plugin-in_stdin.a
bin/hello_world_cpp: library/libflb-plugin-in_syslog.a
bin/hello_world_cpp: library/libflb-plugin-in_exec.a
bin/hello_world_cpp: library/libflb-plugin-in_tcp.a
bin/hello_world_cpp: library/libflb-plugin-in_mqtt.a
bin/hello_world_cpp: library/libflb-plugin-in_lib.a
bin/hello_world_cpp: library/libflb-plugin-in_forward.a
bin/hello_world_cpp: library/libflb-plugin-in_random.a
bin/hello_world_cpp: library/libflb-plugin-out_azure.a
bin/hello_world_cpp: library/libflb-plugin-out_azure_blob.a
bin/hello_world_cpp: library/libflb-plugin-out_bigquery.a
bin/hello_world_cpp: library/libflb-plugin-out_calyptia.a
bin/hello_world_cpp: library/libflb-plugin-out_counter.a
bin/hello_world_cpp: library/libflb-plugin-out_datadog.a
bin/hello_world_cpp: library/libflb-plugin-out_es.a
bin/hello_world_cpp: library/libflb-plugin-out_exit.a
bin/hello_world_cpp: library/libflb-plugin-out_file.a
bin/hello_world_cpp: library/libflb-plugin-out_forward.a
bin/hello_world_cpp: library/libflb-plugin-out_http.a
bin/hello_world_cpp: library/libflb-plugin-out_influxdb.a
bin/hello_world_cpp: library/libflb-plugin-out_logdna.a
bin/hello_world_cpp: library/libflb-plugin-out_loki.a
bin/hello_world_cpp: library/libflb-plugin-out_kafka_rest.a
bin/hello_world_cpp: library/libflb-plugin-out_nats.a
bin/hello_world_cpp: library/libflb-plugin-out_nrlogs.a
bin/hello_world_cpp: library/libflb-plugin-out_null.a
bin/hello_world_cpp: library/libflb-plugin-out_plot.a
bin/hello_world_cpp: library/libflb-plugin-out_skywalking.a
bin/hello_world_cpp: library/libflb-plugin-out_slack.a
bin/hello_world_cpp: library/libflb-plugin-out_splunk.a
bin/hello_world_cpp: library/libflb-plugin-out_stackdriver.a
bin/hello_world_cpp: library/libflb-plugin-out_stdout.a
bin/hello_world_cpp: library/libflb-plugin-out_syslog.a
bin/hello_world_cpp: library/libflb-plugin-out_tcp.a
bin/hello_world_cpp: library/libflb-plugin-out_td.a
bin/hello_world_cpp: library/libflb-plugin-out_lib.a
bin/hello_world_cpp: library/libflb-plugin-out_flowcounter.a
bin/hello_world_cpp: library/libflb-plugin-out_gelf.a
bin/hello_world_cpp: library/libflb-plugin-out_websocket.a
bin/hello_world_cpp: library/libflb-plugin-out_cloudwatch_logs.a
bin/hello_world_cpp: library/libflb-plugin-out_kinesis_firehose.a
bin/hello_world_cpp: library/libflb-plugin-out_kinesis_streams.a
bin/hello_world_cpp: library/libflb-plugin-out_prometheus_exporter.a
bin/hello_world_cpp: library/libflb-plugin-out_prometheus_remote_write.a
bin/hello_world_cpp: library/libflb-plugin-out_s3.a
bin/hello_world_cpp: library/libflb-plugin-filter_alter_size.a
bin/hello_world_cpp: library/libflb-plugin-filter_aws.a
bin/hello_world_cpp: library/libflb-plugin-filter_checklist.a
bin/hello_world_cpp: library/libflb-plugin-filter_record_modifier.a
bin/hello_world_cpp: library/libflb-plugin-filter_throttle.a
bin/hello_world_cpp: library/libflb-plugin-filter_kubernetes.a
bin/hello_world_cpp: library/libflb-plugin-filter_modify.a
bin/hello_world_cpp: library/libflb-plugin-filter_multiline.a
bin/hello_world_cpp: library/libflb-plugin-filter_nest.a
bin/hello_world_cpp: library/libflb-plugin-filter_parser.a
bin/hello_world_cpp: library/libflb-plugin-filter_expect.a
bin/hello_world_cpp: library/libflb-plugin-filter_grep.a
bin/hello_world_cpp: library/libflb-plugin-filter_rewrite_tag.a
bin/hello_world_cpp: library/libflb-plugin-filter_lua.a
bin/hello_world_cpp: library/libflb-plugin-filter_stdout.a
bin/hello_world_cpp: library/libflb-plugin-filter_geoip2.a
bin/hello_world_cpp: library/libapi-v1.a
bin/hello_world_cpp: library/libfluent-bit.a
bin/hello_world_cpp: library/libmaxminddb.a
bin/hello_world_cpp: lib/monkey/library/libmonkey.a
bin/hello_world_cpp: lib/monkey/library/monkey-liana.a
bin/hello_world_cpp: lib/monkey/library/libregex.a
bin/hello_world_cpp: lib/monkey/library/libmk_core.a
bin/hello_world_cpp: library/libjsmn.a
bin/hello_world_cpp: library/libmsgpack-c-static.a
bin/hello_world_cpp: library/libchunkio-static.a
bin/hello_world_cpp: library/libcio-crc32.a
bin/hello_world_cpp: library/libminiz.a
bin/hello_world_cpp: library/libcmetrics.a
bin/hello_world_cpp: library/libmpack-static.a
bin/hello_world_cpp: library/libxxhash.a
bin/hello_world_cpp: library/libflb-plugin-proxy-go.a
bin/hello_world_cpp: lib/monkey/library/libco.a
bin/hello_world_cpp: lib/libonigmo.a
bin/hello_world_cpp: lib/libluajit.a
bin/hello_world_cpp: library/libsqlite3.a
bin/hello_world_cpp: library/libmbedtls.a
bin/hello_world_cpp: library/libmbedx509.a
bin/hello_world_cpp: library/libmbedcrypto.a
bin/hello_world_cpp: lib/c-ares-809d5e84/lib/libcares.a
bin/hello_world_cpp: library/libsnappy-c.a
bin/hello_world_cpp: /usr/lib/x86_64-linux-gnu/libssl.so
bin/hello_world_cpp: /usr/lib/x86_64-linux-gnu/libcrypto.so
bin/hello_world_cpp: library/libtutf8e.a
bin/hello_world_cpp: library/libflb-ra-parser.a
bin/hello_world_cpp: library/libflb-sp.a
bin/hello_world_cpp: lib/monkey/library/librbtree.a
bin/hello_world_cpp: library/libflb-sp-parser.a
bin/hello_world_cpp: examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/link.txt
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shikugawa/dev/fluent-bit/cmake-build-debug/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX executable ../../bin/hello_world_cpp"
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/hello_world_cpp.dir/link.txt --verbose=$(VERBOSE)

# Rule to build all files generated by this target.
examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/build: bin/hello_world_cpp

.PHONY : examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/build

examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/clean:
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp && $(CMAKE_COMMAND) -P CMakeFiles/hello_world_cpp.dir/cmake_clean.cmake
.PHONY : examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/clean

examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/depend:
	cd /home/shikugawa/dev/fluent-bit/cmake-build-debug && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shikugawa/dev/fluent-bit /home/shikugawa/dev/fluent-bit/examples/hello_world_cpp /home/shikugawa/dev/fluent-bit/cmake-build-debug /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp /home/shikugawa/dev/fluent-bit/cmake-build-debug/examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/DependInfo.cmake --color=$(COLOR)
.PHONY : examples/hello_world_cpp/CMakeFiles/hello_world_cpp.dir/depend

